#!/usr/bin/python3

import sys
import os
import time
import datetime
import uuid

import MySQLdb
from loguru import logger

from utils import http_get


def complated_taskruntime(scheduler, task, case, device, now, report):
    db = MySQLdb.connect("127.0.0.1", "root", "123456", "zztest", charset='utf8' )
    cursor = db.cursor()
    sql_template = "insert into app_taskruntime (id, scheduler_id, task_id, case_id, device_id, state_id, report, created_at, updated_at) values  ('%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s')"
    # Hard coding
    sql = sql_template % (str(uuid.uuid4()).replace("-", ""), scheduler, task, case, device, 'c678cf9abebf4dd3bddbbd3a50f70cd3', report, now, now)
    logger.debug(sql)
    cursor.execute(sql)
    cursor.close()
    db.commit()
    db.close()


def get_task_list(scheduler_name):
    sql_template = """
        select id,name,scheduler_id from app_task where scheduler_id in (
           select id from app_scheduler where name = '%s'
        )
    """
    db = MySQLdb.connect("127.0.0.1", "root", "123456", "zztest", charset='utf8' )
    cursor = db.cursor()
    cursor.execute(sql_template % scheduler_name)
    data = cursor.fetchall()
    db.close()

    return data


def get_case_list(task_id):
    sql_template = """
        select b.id, b.name, b.script from app_taskcase a, app_case b where 
            a.case_id = b.id and 
            a.task_id = '%s'
    """
    db = MySQLdb.connect("127.0.0.1", "root", "123456", "zztest", charset='utf8' )
    cursor = db.cursor()
    cursor.execute(sql_template % task_id)
    data = cursor.fetchall()
    db.close()

    return data


def get_device_list(task_id):
    sql_template = """
        select b.id, b.serial from app_taskdevice a, app_device b where 
            a.device_id = b.id and 
            a.task_id = '%s' and 
            b.status = 'Online'
    """
    db = MySQLdb.connect("127.0.0.1", "root", "123456", "zztest", charset='utf8')
    cursor = db.cursor()
    cursor.execute(sql_template % task_id)
    data = cursor.fetchall()
    db.close()

    return data


def execute():
    logger.debug("android_scheduler starting!")

    root_dir = os.path.abspath(os.path.dirname(os.getcwd()) + os.path.sep + "..")
    data_dir = root_dir + os.path.sep + "data"
    logger.debug("data_dir: " + data_dir)

    while True:
        tasks = get_task_list("android_scheduler")
        for task_id, task_name, scheduler_id in tasks:
            logger.debug("task_id: %s, task_name: %s" % (task_id, task_name))
            cases = get_case_list(task_id)
            for case_id, case_name, case_script in cases:
                logger.debug("case_id: %s, case_name: %s, case_script: %s" % (case_id, case_name, case_script))
                # TODO:
                # tar zxvf -C data/:id xx.air.zip
                devices = get_device_list(task_id)
                for device_id, device_serial in devices:
                    now = time.strftime("%Y_%m_%d_%H_%M_%S")
                    dirname = "%s-%s" % (device_serial, now)
                    logger.debug("device_id: %s, device_serial: %s" % (device_id, device_serial))
                    run_cmd_template = "%s run %s/case/%s.air \
                             --device Android://127.0.0.1:5037/%s \
                             --log %s/log/%s \
                             --recording"
                    run_cmd = run_cmd_template % (
                        "/usr/local/bin/airtest", data_dir, case_id, 
                        device_serial,
                        data_dir, dirname,
                    )
                    logger.debug("run_cmd: %s" % run_cmd)
                    os.system(run_cmd)

                    report_cmd_template = "%s report %s/case/%s.air \
                        --log_root %s/log/%s \
                        --export %s/report/%s"
                    report_cmd = report_cmd_template % (
                        "/usr/local/bin/airtest", data_dir, case_id, 
                        data_dir, dirname,
                        data_dir, dirname,
                    )
                    logger.debug("report_cmd: %s" % report_cmd)
                    os.system(report_cmd)

                    report = "http://192.168.10.99:9000/%s/%s.log/log.html" % (dirname, case_id)
                    complated_taskruntime(scheduler_id, task_id, case_id, device_id, now, report)

        # time.sleep(5)
        break


def main():
    execute()


if __name__=='__main__':
    main()
