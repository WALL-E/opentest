from django.contrib import admin
from django.contrib.auth.models import User
from django.db.models import Q

from .models import State, OperatingSystem, Vendor, Brand, Device, Scheduler
from .models import Application, ApplicationVersion, Requirement, Case
from .models import Task, TaskCase, TaskRuntime, TaskDevice, TaskScheduler


class DictAdmin(admin.ModelAdmin):
    fields = ('name', 'desc')
    list_display = ('name', 'desc', 'created_at')
    list_filter = [
        'created_at',
        'updated_at',
    ]
    search_fields = ['name']
    # readonly_fields = [field.name for field in Currencie._meta.fields]

    def get_ordering(self, request):
        return ['priority', 'name']

    def has_add_permission(self, request):
        return True
  
    def has_delete_permission(self, request, obj=None):
        return True

    class Meta:
        abstract = True


class StateAdmin(DictAdmin):
    pass


class OperatingSystemAdmin(DictAdmin):
    pass


class VendorAdmin(DictAdmin):
    pass


class ApplicationAdmin(DictAdmin):
    pass


class TaskAdmin(DictAdmin):
    pass


class BrandAdmin(admin.ModelAdmin):
    fields = ('name', 'desc', 'vendor')
    list_display = ('name', 'vendor', 'created_at')
    list_filter = [
        'vendor',
    ]

    search_fields = ['name']

    def get_ordering(self, request):
        return ['name']


class DeviceAdmin(admin.ModelAdmin):
    fields = ('serial', 'product', 'hardware', 'mem', 'resolution', 'operating_system', 'brand', 'status')
    list_display = ('serial', 'product', 'hardware', 'mem', 'resolution', 'operating_system', 'brand', 'status')
    list_filter = [
        'status',
        'operating_system',
        'brand',
        'created_at'
    ]
    search_fields = ['serial', 'product', 'hardware']

    def get_ordering(self, request):
        return ['serial']

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class ApplicationVersionAdmin(admin.ModelAdmin):
    fields = ('version', 'link', 'application', 'operating_system')
    list_display = ('version', 'link', 'application', 'operating_system')
    list_filter = [
        'application__name',
        'operating_system',
        'created_at',
    ]

    def get_ordering(self, request):
        return ['version']

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class RequirementAdmin(admin.ModelAdmin):
    fields = ('name', 'desc', 'application_version')
    list_display = ('name', 'application_version', 'created_at', 'updated_at')
    list_filter = [
        'application_version__version',
        'created_at',
    ]

    search_fields = ['name']

    def get_ordering(self, request):
        return ['name']

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class CaseAdmin(admin.ModelAdmin):
    fields = ('name', 'desc', 'requirement', 'script')
    list_display = ('name', 'requirement', 'created_at', 'updated_at')
    list_filter = [
        'requirement__name',
        'created_at',
    ]
    search_fields = ['name']

    def get_ordering(self, request):
        return ['name']

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class SchedulerAdmin(admin.ModelAdmin):
    fields = ('name', 'desc', 'routine')
    list_display = ('name', 'routine', 'created_at', 'updated_at')
    list_filter = [
        'created_at',
        'updated_at',
    ]
    search_fields = ['name']

    def get_ordering(self, request):
        return ['name']

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class SchedulerAdmin(admin.ModelAdmin):
    fields = ('name', 'desc', 'routine')
    list_display = ('name', 'routine', 'created_at', 'updated_at')
    list_filter = [
        'created_at',
    ]
    search_fields = ['name']

    def get_ordering(self, request):
        return ['name']

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class TaskCaseAdmin(admin.ModelAdmin):
    fields = ('task', 'case')
    list_display = ('task', 'case')
    list_filter = [
        'task',
        'created_at',
        'updated_at',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class TaskDeviceAdmin(admin.ModelAdmin):
    fields = ('task', 'device')
    list_display = ('task', 'device')
    list_filter = [
        'task',
        'created_at',
        'updated_at',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class TaskSchedulerAdmin(admin.ModelAdmin):
    fields = ('task', 'scheduler')
    list_display = ('task', 'scheduler')
    list_filter = [
        'task',
        'created_at',
        'updated_at',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class TaskRuntimeAdmin(admin.ModelAdmin):
    fields = ('task', 'state', 'case', 'scheduler')
    list_display = ('task', 'state', 'case', 'scheduler')
    list_filter = [
        'task',
        'state',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


admin.site.register(State, StateAdmin)
admin.site.register(OperatingSystem, OperatingSystemAdmin)
admin.site.register(Vendor, VendorAdmin)
admin.site.register(Brand, BrandAdmin)
admin.site.register(Device, DeviceAdmin)
admin.site.register(Application, ApplicationAdmin)
admin.site.register(ApplicationVersion, ApplicationVersionAdmin)
admin.site.register(Requirement, RequirementAdmin)
admin.site.register(Case, CaseAdmin)
admin.site.register(Scheduler, SchedulerAdmin)
admin.site.register(Task, TaskAdmin)
admin.site.register(TaskCase, TaskCaseAdmin)
admin.site.register(TaskDevice, TaskDeviceAdmin)
admin.site.register(TaskScheduler, TaskSchedulerAdmin)
admin.site.register(TaskRuntime, TaskRuntimeAdmin)

admin.site.site_title = 'Business & Operation Support System'
admin.site.site_header = 'Business & Operation Support System'
