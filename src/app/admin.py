from django.contrib import admin
from django.contrib.auth.models import User
from django.db.models import Q

from .models import State, OperatingSystem, Vendor, Brand, Device, Scheduler
from .models import Application, ApplicationVersion, Requirement, Case
from .models import Task, TaskCase, TaskRuntime, TaskDevice, TaskScheduler


class BaseAdmin(admin.ModelAdmin):
    fields = ('name', 'desc')
    list_display = ('name', 'desc', 'created_at')
    list_filter = [
        'created_at',
        'updated_at',
    ]
    search_fields = ['name']
    # readonly_fields = [field.name for field in Currencie._meta.fields]

    def get_ordering(self, request):
        return ['name']

    def has_add_permission(self, request):
        return True
  
    def has_delete_permission(self, request, obj=None):
        return True

    class Meta:
        abstract = True

class StateAdmin(BaseAdmin):
    pass

class OperatingSystemAdmin(BaseAdmin):
    pass

class VendorAdmin(BaseAdmin):
    pass

class BrandAdmin(BaseAdmin):
    fields = ('name', 'desc', 'vendor')
    list_display = ('name', 'vendor', 'created_at', 'updated_at')

class DeviceAdmin(admin.ModelAdmin):
    fields = ('serial', 'product', 'hardware', 'mem', 'resolution', 'operating_system', 'brand', 'created_at', 'updated_at')
    list_display = ('serial', 'product', 'hardware', 'mem', 'resolution', 'operating_system', 'brand', 'created_at', 'updated_at')
    list_filter = [
        'operating_system',
        'brand',
        'created_at',
        'updated_at',
    ]
    search_fields = ['serial', 'product', 'hardware']

    def get_ordering(self, request):
        return ['serial']

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class ApplicationAdmin(BaseAdmin):
    pass

class ApplicationVersionAdmin(admin.ModelAdmin):
    fields = ('version', 'link', 'application', 'operating_system')
    list_display = ('version', 'link', 'application', 'operating_system')
    list_filter = [
        'created_at',
        'updated_at',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class RequirementAdmin(BaseAdmin):
    fields = ('name', 'desc', 'application_version')
    list_display = ('name', 'application_version', 'created_at', 'updated_at')


class CaseAdmin(BaseAdmin):
    fields = ('name', 'desc', 'requirement', 'script')
    list_display = ('name', 'requirement', 'script', 'created_at', 'updated_at')


class SchedulerAdmin(BaseAdmin):
    fields = ('name', 'desc', 'routine')
    list_display = ('name', 'routine', 'created_at', 'updated_at')


class TaskAdmin(BaseAdmin):
    pass


class TaskCaseAdmin(admin.ModelAdmin):
    fields = ('task', 'case')
    list_display = ('task', 'case')
    list_filter = [
        'created_at',
        'updated_at',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class TaskDeviceAdmin(admin.ModelAdmin):
    fields = ('task', 'device')
    list_display = ('task', 'device')
    list_filter = [
        'created_at',
        'updated_at',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class TaskSchedulerAdmin(admin.ModelAdmin):
    fields = ('task', 'scheduler')
    list_display = ('task', 'scheduler')
    list_filter = [
        'created_at',
        'updated_at',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True


class TaskRuntimeAdmin(admin.ModelAdmin):
    fields = ('task', 'state')
    list_display = ('task', 'state')
    list_filter = [
        'created_at',
        'updated_at',
    ]

    def has_add_permission(self, request):
        return True

    def has_delete_permission(self, request, obj=None):
        return True



admin.site.register(State, StateAdmin)
admin.site.register(OperatingSystem, OperatingSystemAdmin)
admin.site.register(Vendor, VendorAdmin)
admin.site.register(Brand, BrandAdmin)
admin.site.register(Device, DeviceAdmin)
admin.site.register(Application, ApplicationAdmin)
admin.site.register(ApplicationVersion, ApplicationVersionAdmin)
admin.site.register(Requirement, RequirementAdmin)
admin.site.register(Case, CaseAdmin)
admin.site.register(Task, TaskAdmin)
admin.site.register(TaskCase, TaskCaseAdmin)
admin.site.register(TaskDevice, TaskDeviceAdmin)
admin.site.register(TaskScheduler, TaskSchedulerAdmin)
admin.site.register(TaskRuntime, TaskRuntimeAdmin)

admin.site.site_title = 'Business & Operation Support System'
admin.site.site_header = 'Business & Operation Support System'
